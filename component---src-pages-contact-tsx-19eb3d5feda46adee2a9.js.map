{"version":3,"sources":["webpack:///./src/components/createAntFields.tsx","webpack:///./src/pages/contact.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/footer.tsx","webpack:///./src/components/attractions.tsx","webpack:///./src/components/modal.tsx","webpack:///./src/components/image.tsx","webpack:///./src/components/photos.tsx","webpack:///./src/components/reviews.tsx","webpack:///./src/components/navbar.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/components/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["FormItem","a","Item","TextArea","Option","CreateAntField","AntComponent","_ref","field","form","hasFeedback","label","selectOptions","submitCount","type","props","_objectWithoutPropertiesLoose","touched","name","submitted","hasError","errors","submittedError","touchedError","react_default","createElement","className","help","validateStatus","Object","assign","onBlur","value","setFieldTouched","onChange","_ref2","target","setFieldValue","map","key","AntSelect","select_default","AntDatePicker","date_picker_default","AntInput","input_default","AntTextArea","time_picker_default","Contact","_this","_React$Component","call","this","toggleMenu","menuToggled","state","setState","handleEnquiryChange","showBookingDates","render","_this$state","components","styles","handleToggle","showModal","Fragment","filename","imgStyle","filter","style","height","formik_esm","initialValues","email","text","validationSchema","Yup","shape","email_field","required","name_field","enquiry_type_field","enquiry_date_field","onSubmit","values","htmlFor","id","size","component","format","autosize","minRows","maxRows","button_default","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","data","query","finalData","children","Consumer","Footer","_len","arguments","length","args","Array","_key","apply","concat","renderContactsInfo","header","description","prototype","icon_default","Attractions","show","loading","ref","htmlRef","fontFamily","fontWeight","color","paddingBottom","from","item","index","card_default","bodyStyle","padding","bordered","src","Modal","gatsby_browser_entry","to","Image","image","images","edges","find","node","relativePath","includes","gatsby_image_default","fluid","childImageSharp","_644985347","Photos","carousel_default","effect","arrows","draggable","autoplay","skeleton_default","active","image_Image","Reviews","renderComments","i","avatar_default","icon","_this$props","Navbar","onClick","Layout","_856328897","footer_Footer","attractions_Attractions","modal_Modal","photos_Photos","reviews_Reviews","navbar_Navbar","layout_Layout","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-contact-tsx-19eb3d5feda46adee2a9.js","sourcesContent":["import React from \"react\";\r\nimport { DatePicker, Form, Input, TimePicker, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst CreateAntField = (AntComponent: any) => ({\r\n  field,\r\n  form,\r\n  hasFeedback,\r\n  label,\r\n  selectOptions,\r\n  submitCount,\r\n  type,\r\n  ...props\r\n}) => {\r\n  const touched = form.touched[field.name];\r\n  const submitted = submitCount > 0;\r\n  const hasError = form.errors[field.name];\r\n  const submittedError = hasError && submitted;\r\n  const touchedError = hasError && touched;\r\n  const onInputChange = ({ target: { value } }) =>\r\n    form.setFieldValue(field.name, value);\r\n  const onChange = (value: any) => {\r\n    form.setFieldValue(field.name, value);\r\n    props.onChange && props.onChange(value);\r\n  }\r\n  const onBlur = (value: string) => {\r\n    form.setFieldTouched(field.name, true);\r\n    props.onBlur && props.onBlur(value);\r\n  }\r\n  return (\r\n    <div className=\"field-container\">\r\n      <FormItem\r\n        label={label}\r\n        hasFeedback={\r\n          (hasFeedback && submitted) || (hasFeedback && touched) ? true : false\r\n        }\r\n        help={submittedError || touchedError ? hasError : false}\r\n        validateStatus={submittedError || touchedError ? \"error\" : \"success\"}\r\n      >\r\n        <AntComponent\r\n          {...field}\r\n          {...props}\r\n          onBlur={onBlur}\r\n          onChange={type ? onInputChange : onChange}\r\n        >\r\n          {selectOptions &&\r\n            selectOptions.map((name: string) => <Option key={name}>{name}</Option>)}\r\n        </AntComponent>\r\n      </FormItem>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const AntSelect = CreateAntField(Select);\r\nexport const AntDatePicker = CreateAntField(DatePicker);\r\nexport const AntInput = CreateAntField(Input);\r\nexport const AntTimePicker = CreateAntField(TimePicker);\r\nexport const AntTextArea = CreateAntField(TextArea);\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Button } from \"antd\";\r\nimport {\r\n  AntTextArea,\r\n  AntInput,\r\n  AntSelect,\r\n  AntDatePicker,\r\n} from \"../components/createAntFields\";\r\nimport { Footer, Image, Layout, Navbar, Modal } from \"../components\";\r\nimport * as styles from \"./contact.module.scss\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass Contact extends React.Component<any, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      menuToggled: false,\r\n      showBookingDates: false\r\n    }\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    const { menuToggled } = this.state;\r\n\r\n    this.setState({\r\n      menuToggled: !menuToggled\r\n    })\r\n  }\r\n\r\n  handleEnquiryChange = (value: string) => {    \r\n    this.setState({ \r\n      showBookingDates: value === \"Booking enquiry\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { menuToggled, showBookingDates } = this.state; \r\n    \r\n    return (\r\n      <Layout className={styles.contact}>\r\n        <Navbar menuToggled={menuToggled} handleToggle={this.toggleMenu}/>\r\n        <Modal showModal={menuToggled} />\r\n        {!menuToggled && \r\n        <>\r\n          <div className={styles.contactIntro_container}>\r\n            <Image filename=\"aelan_4.jpg\" imgStyle={{ filter: 'brightness(0.5)' }} style={{ height: '50vh' }}/>\r\n            <div className={styles.contactIntro_text}>\r\n              <h1 className={styles.contactIntro_header}>Contact Us</h1>\r\n              <p className={styles.contactIntro_subtitle}>Fill in the fields below and we'll get back to you.</p>\r\n            </div>\r\n          </div>\r\n          <div className={styles.contactForm_container}>\r\n            <Formik\r\n              initialValues={{ email: '', text: '' }}\r\n              validationSchema={Yup.object().shape({\r\n                email_field: Yup.string()\r\n                  .email(\"Please enter a valid email\")\r\n                  .required(\"Email is required\"),\r\n                name_field: Yup.string()\r\n                  .required(\"Name is required\"),\r\n                enquiry_type_field: Yup.string()\r\n                  .required(\"Please state the purpose of your enquiry\"),\r\n                enquiry_date_field: Yup.mixed(\"Date required\")\r\n                  .required(\"Date required\")\r\n              })}\r\n              onSubmit={( values ) => {\r\n              }}\r\n            >\r\n              <Form className={styles.contactForm_form}>\r\n                <div className={styles.contactForm_field}>\r\n                  <label htmlFor=\"name_field\">Name</label>\r\n                  <Field id=\"name_field\" \r\n                    size=\"large\" \r\n                    name=\"name_field\" \r\n                    type=\"text\" \r\n                    component={AntInput}\r\n                    hasFeedback\r\n                  />\r\n                </div>\r\n                <div className={styles.contactForm_field}>\r\n                  <label htmlFor=\"email_field\">Email</label>\r\n                  <Field id=\"email_field\" \r\n                    size=\"large\" \r\n                    name=\"email_field\" \r\n                    type=\"email\" \r\n                    component={AntInput}\r\n                    hasFeedback\r\n                  />\r\n                </div>\r\n                <div className={styles.contactForm_field}>\r\n                  <label htmlFor=\"enquiry_type_field\">Type of enquiry</label>\r\n                  <Field id=\"enquiry_type_field\" \r\n                    size=\"large\" \r\n                    name=\"enquiry_type_field\" \r\n                    component={AntSelect} \r\n                    selectOptions={[\"General enquiry\", \"Booking enquiry\"]}\r\n                    onChange={this.handleEnquiryChange}\r\n                    hasFeedback\r\n                  />\r\n                </div>\r\n                {showBookingDates && \r\n                  <div className={styles.contactForm_field}>\r\n                  <label htmlFor=\"enquiry_date_field\">Enquiry dates</label>\r\n                  <Field id=\"enquiry_date_field\" \r\n                    size=\"large\" \r\n                    name=\"enquiry_date_field\" \r\n                    component={AntDatePicker} \r\n                    format=\"DD-MM-YYYY\"\r\n                    hasFeedback\r\n                  />\r\n                </div>\r\n                }\r\n                <div className={styles.contactForm_field}>\r\n                  <label htmlFor=\"message_field\">Write message</label>\r\n                  <Field id=\"message_field\" \r\n                    size=\"large\" \r\n                    name=\"message_field\" \r\n                    component={AntTextArea}\r\n                    type=\"text\"\r\n                    autosize={{ minRows: 4, maxRows: 6 }}         \r\n                  />\r\n                </div>\r\n                <Button type=\"primary\" shape=\"round\">Send message</Button>\r\n              </Form>\r\n            </Formik>\r\n            <div className={styles.contactForm_details}>\r\n              <p className={styles.contactForm_details_label}>ADDRESS</p>\r\n              <p className={styles.contactForm_details_text}>98 West 21th Street, Suite 217 Place A</p>\r\n              <p className={styles.contactForm_details_label}>EMAIL</p>\r\n              <p className={styles.contactForm_details_text}>info@yourdomain.com</p>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n        }\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\r\nimport { Icon } from 'antd';\r\nimport * as styles from \"./footer.module.scss\";\r\n\r\nexport class Footer extends React.Component<any> {\r\n  renderContactsInfo = (header: string, description: string) => (\r\n  <div className={styles.footerContainer_contacts_info}>\r\n    <h5 className={styles.footerContainer_contacts_header}>\r\n      {header}:\r\n    </h5>\r\n    <p>{description}</p>\r\n  </div>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.footerContainer}>\r\n        <div className={styles.footerContainer_section}>\r\n          <div className={styles.footerContainer_section_item}>\r\n            <p>Rooms</p>\r\n            <p>Privacy Policy</p>\r\n            <p>Terms & Conditions</p>\r\n          </div>\r\n          <div className={styles.footerContainer_section_item}>\r\n            {this.renderContactsInfo(\"Email\", \"info@yourdomain.com\")}\r\n            {this.renderContactsInfo(\"Social Media\", \"Facebook\")}        \r\n          </div>\r\n        </div>\r\n        <hr className={styles.footerContainer_horizontalline}/>\r\n        <div className={styles.footerContainer_footer}>\r\n          <p>Copyright ©2019 All rights reserved</p>\r\n          <div className={styles.footerContainer_footer_links}>\r\n            <Icon type=\"facebook\" />\r\n            <Icon type=\"ant-design\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Card } from 'antd';\r\nimport * as styles from \"../components/attractions.module.scss\";\r\n\r\ninterface IAttractions {\r\n  show: boolean;\r\n  htmlRef?: React.Ref<any>;\r\n}\r\n\r\nexport class Attractions extends React.Component<IAttractions> {\r\n  render() {        \r\n    const getItems = () => (\r\n      <li className={`${styles.attractionsImage} ${show ? styles.attractionsImage__show : styles.attractionsImage__hide}`} >\r\n        <Card         \r\n          bodyStyle={{ padding: 0 }} \r\n          loading={loading} \r\n          bordered={loading}\r\n        >\r\n          <img src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\" />\r\n        </Card>\r\n        <p>Restaurant</p>\r\n      </li>\r\n    )\r\n    \r\n    const { show } = this.props;\r\n    const loading = true;\r\n\r\n    return (\r\n      <div className={styles.attractionsContainer} ref={this.props.htmlRef}>\r\n        <p style={{ fontFamily: 'Mukta Mahee, arial, sans-serif', fontWeight: 'bold', color: 'slategray', paddingBottom: '20px' }}>YOU CAN VISIT</p>\r\n        <div>\r\n          <ol className={styles.attractionsContainer_list}>\r\n            {Array.from({length: 4}, (item, index) => getItems())}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport * as styles from \"./modal.module.scss\";\r\n\r\ninterface IModal {\r\n  showModal: boolean;\r\n}\r\n\r\nexport const Modal = (props: IModal) => (\r\n  <div className={`${styles.menuModal} ${props.showModal ? styles.menuModal_open : styles.menuModal_closed}`}>\r\n    <div className={styles.menuContainer}>\r\n      <ol className={styles.menuActions}>\r\n        <li className={styles.menuActions_li}><Link to=\"/\">Home</Link></li>\r\n        <li className={styles.menuActions_li}><Link to=\"/about/\">About</Link></li>\r\n        <li className={styles.menuActions_li}><Link to=\"/apartments/\">Apartments</Link></li>\r\n      </ol>\r\n      <div className={styles.menuContacts}>\r\n        <div className={styles.menuContacts_Info}>\r\n          <h5 className={styles.menuContacts_header}>CONTACT INFO</h5>\r\n          <p>info@yourdomain.com</p>\r\n        </div>            \r\n        <div className={styles.menuContacts_SocialMedia}>\r\n          <h5 className={styles.menuContacts_header}>CONNECT WITH US</h5>\r\n          <p>Facebook</p>\r\n          <p>AirBnb</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\ninterface IImage {\r\n  filename: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport const Image = (props: IImage) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        images: allFile {\r\n          edges {\r\n            node {\r\n              relativePath\r\n              name\r\n              childImageSharp {\r\n                fluid(maxWidth: 1920, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                  presentationWidth\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const image = data.images.edges.find((n:any) => {\r\n        return n.node.relativePath.includes(props.filename);\r\n      });\r\n      if (!image) {\r\n        return null;\r\n      }\r\n\r\n      return <Img \r\n        filename={props.filename}\r\n        fluid={image.node.childImageSharp.fluid} \r\n        {...props}\r\n      />;\r\n    }}\r\n  />\r\n)\r\n","import React from 'react';\r\nimport { Carousel, Skeleton } from 'antd';\r\nimport { Image } from \"../components\";\r\nimport * as styles from \"./photos.module.scss\";\r\n\r\ninterface IPhotos {\r\n  htmlRef?: React.Ref<any>;\r\n  show: boolean;\r\n}\r\n\r\nexport class Photos extends React.Component<IPhotos> {\r\n  constructor(props: any) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const { show } = this.props;\r\n\r\n    return (\r\n      <div className={`${styles.photosContainer} ${show ? styles.photosContainer__show : styles.photosContainer__hide}`} \r\n        ref={this.props.htmlRef}\r\n      >\r\n        <div className={styles.photosContainer_info}>\r\n          <h1 className={styles.photosContainer_header}>A gorgeous place to enjoy your holiday</h1>\r\n          <p className={styles.photosContainer_description}>Lorem ipsum dolor sit amet, consectetur adipisicing elit. In dolor, iusto doloremque quo odio repudiandae sunt eveniet? Enim facilis laborum voluptate id porro, culpa maiores quis, blanditiis laboriosam alias. Sed.</p>\r\n        </div>\r\n        <div className={styles.photosContainer_carousel}>          \r\n          <Carousel className={styles.photosContainer_carousel_photos} \r\n            effect=\"fade\" \r\n            arrows={true}\r\n            draggable={true}\r\n            autoplay            \r\n          >\r\n            <Skeleton active loading={false}>\r\n              <Image filename=\"slider-1.jpg\" />\r\n            </Skeleton>      \r\n            <Skeleton active loading={false}>\r\n              <Image filename=\"slider-2.jpg\"/>\r\n            </Skeleton>      \r\n            <Skeleton active loading={false}>\r\n              <Image filename=\"slider-3.jpg\"/>\r\n            </Skeleton>         \r\n          </Carousel>          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Avatar } from 'antd';\r\nimport * as styles from \"../components/reviews.module.scss\";\r\n\r\ninterface IReviews {\r\n  htmlRef?: React.Ref<any>;\r\n  show: boolean;\r\n}\r\n\r\nexport class Reviews extends React.Component<IReviews> {\r\n  renderComments = () => {\r\n    const list = [1, 2, 3]\r\n\r\n    return (\r\n      list.map(i => (\r\n        <div className={styles.reviewsComment}>\r\n          <Avatar size={64} icon=\"user\" />\r\n          <p className={styles.reviewsComment_description}>“Et quidem, impedit eum fugiat excepturi iste aliquid suscipit, tempore, delectus rem soluta voluptatem distinctio sed dolores, magni fugit nemo cum expedita. Totam a accusantium sunt aut autem placeat officia.”</p> \r\n          <p className={styles.reviewsComment_user}>- User Smith</p>\r\n        </div>\r\n      ))\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { htmlRef, show } = this.props;\r\n\r\n    return (\r\n      <div className={`${styles.reviewsContainer} ${show ? styles.reviewsContainer__show : styles.reviewsContainer__hide}`}\r\n        ref={htmlRef}\r\n      >        \r\n        <h1 className={styles.reviewsContainer_title}>Reviews</h1>\r\n        <div className={styles.reviewsComment_container}>\r\n          {this.renderComments()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Icon } from 'antd';\r\nimport { Link } from \"gatsby\";\r\nimport * as styles from \"./navbar.module.scss\";\r\n\r\ninterface INavbar {\r\n  handleToggle: any;\r\n  menuToggled: boolean;  \r\n}\r\n\r\nexport const Navbar = (props: INavbar) => (\r\n  <div className={styles.navbar}>\r\n    <Link to=\"/\"><Icon type=\"gitlab\" className={styles.navbar_icon}/></Link>\r\n    <div className={\r\n      `${styles.navbar_icon} ${styles.menu_icon} \r\n        ${props.menuToggled ? styles.menu_icon__open : styles.menu_icon__closed}`\r\n      } \r\n      onClick={props.handleToggle}>\r\n      <span/>\r\n      <span/>\r\n      <span/>\r\n      <span/>\r\n    </div>\r\n  </div>\r\n)\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\ninterface ILayout { \r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\n\r\nexport const Layout = (props: ILayout) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <div {...props}>\r\n      <main>{props.children}</main>\r\n    </div>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","export * from \"./footer\";\r\nexport * from \"./attractions\";\r\nexport * from \"./modal\";\r\nexport * from \"./image\";\r\nexport * from \"./photos\";\r\nexport * from \"./reviews\";\r\nexport * from \"./navbar\";\r\nexport * from \"./layout\";","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}